workflow:
  rules:
    - if: $CI_PIPELINE_SOURCE == 'merge_request_event'

variables:
  DOCKER_DRIVER: overlay2

services:
  - docker:dind

stages:
  - build
  - test

#before_script:
#  - docker-compose version

#build:
#  stage: build
#  tags:
#    - main
#  script:
#    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
#    - docker build -t $CI_REGISTRY/youngwishes/ywstore/$CI_DEFAULT_BRANCH:latest .
#    - docker push $CI_REGISTRY/youngwishes/ywstore/$CI_DEFAULT_BRANCH:latest
#  artifacts:
#    paths:
#      - build/*

test:
  image: python:latest
  variables:
     POSTGRES_USER: $POSTGRES_USER
     POSTGRES_DB: $POSTGRES_DB
     POSTGRES_PASSWORD: $POSTGRES_PASSWORD
     POSTGRES_HOST: $POSTGRES_HOST
     PROJECT_NAME: $PROJECT_NAME
     DEBUG: $DEBUG
  stage: test
#  dependencies:
#    - build
  services:
    - postgres
  tags:
    - main
  script:
#    - docker-compose down -v
    - pip install poetry==1.7.1
    - poetry install
    - pytest -W ignore